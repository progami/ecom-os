import fs from 'fs'
import path from 'path'

// Create a simple text file that simulates a PDF
// (Playwright can upload any file type, the backend will handle validation)
export function createSampleDocument(
  type: string,
  referenceNumber: string,
  index: number = 1
): string {
  const fileName = `${referenceNumber}-${type.replace(/\s+/g, '-')}-${index}.txt`
  const filePath = path.join('/tmp', fileName)
  
  const content = `
========================================
${type.toUpperCase()}
========================================

Reference: ${referenceNumber}
Date: ${new Date().toISOString().split('T')[0]}
Document Type: ${type}
Page: ${index}

This is a sample ${type} document for WMS demo purposes.

Items:
- SKU: CS-XXX
- Quantity: Various
- Container: ${referenceNumber}

Notes:
This document was automatically generated for testing purposes.

========================================
Generated by WMS Demo Script
========================================
`

  fs.writeFileSync(filePath, content, 'utf-8')
  return filePath
}

// Document types for RECEIVE transactions
export const RECEIVE_DOCUMENTS = {
  COMMERCIAL_INVOICE: 'commercial_invoice',
  BILL_OF_LADING: 'bill_of_lading',
  PACKING_LIST: 'packing_list',
  DELIVERY_NOTE: 'delivery_note',
  OTHER: 'other_document'
}

// Document types for SHIP transactions  
export const SHIP_DOCUMENTS = {
  PROOF_OF_PICKUP: 'proof_of_pickup',
  SHIPPING_LABEL: 'shipping_label',
  MANIFEST: 'manifest',
  OTHER: 'other_document'
}

// Get upload pattern for RECEIVE transactions
export function getReceiveUploadPattern(index: number): string[] {
  // Temporarily disable file uploads to focus on testing storage costs
  return []
}

// Get upload pattern for SHIP transactions
export function getShipUploadPattern(index: number): string[] {
  // Temporarily disable file uploads to focus on testing storage costs
  return []
}

// Clean up temporary files
export function cleanupTempFiles() {
  const tmpDir = '/tmp'
  const files = fs.readdirSync(tmpDir)
  files.forEach(file => {
    if (file.includes('-commercial_invoice-') || 
        file.includes('-bill_of_lading-') ||
        file.includes('-packing_list-') ||
        file.includes('-delivery_note-') ||
        file.includes('-proof_of_pickup-') ||
        file.includes('-shipping_label-') ||
        file.includes('-manifest-') ||
        file.includes('-other_document-')) {
      try {
        fs.unlinkSync(path.join(tmpDir, file))
      } catch (e) {
        // Ignore errors
      }
    }
  })
}