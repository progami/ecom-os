generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model AmazonFBAFee {
  id              String    @id @default(cuid())
  marketplace     String
  currency        String
  label           String
  effectiveDate   DateTime
  expiryDate      DateTime?
  productSizeTier String
  unitWeight      String
  minWeight       Decimal?  @db.Decimal(10, 4)
  maxWeight       Decimal?  @db.Decimal(10, 4)
  priceThreshold  Decimal?  @db.Decimal(10, 2)
  fulfillmentFee  Decimal   @db.Decimal(10, 2)
  metadata        Json?
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt

  @@unique([marketplace, effectiveDate, label, productSizeTier, unitWeight])
  @@index([effectiveDate])
  @@index([label])
  @@index([marketplace])
  @@index([priceThreshold])
  @@index([productSizeTier])
}

model BudgetStrategy {
  id            String          @id @default(cuid())
  name          String          @unique
  description   String?
  isActive      Boolean         @default(false)
  snapshot      Json?
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt
  Expense       Expense[]
  GLEntry       GLEntry[]
  OrderTimeline OrderTimeline[]
  Product       Product[]
  UnitSales     UnitSales[]

  @@index([isActive])
}

model CashEvent {
  id          String   @id @default(cuid())
  date        DateTime
  type        String
  category    String
  subcategory String?
  description String
  amount      Decimal  @db.Decimal(10, 2)
  reference   String?
  source      String?
  status      String   @default("pending")
  metadata    Json?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@index([category])
  @@index([date])
  @@index([status])
  @@index([type])
}

model Expense {
  id                String           @id @default(cuid())
  date              DateTime
  weekStarting      DateTime
  category          String
  subcategory       String?
  description       String
  amount            Decimal          @db.Decimal(10, 2)
  type              String           @default("manual")
  vendor            String?
  invoiceNumber     String?
  metadata          Json?
  isRecurring       Boolean          @default(false)
  recurringFreq     String?
  createdAt         DateTime         @default(now())
  updatedAt         DateTime         @updatedAt
  bankTransactionId String?
  isActual          Boolean          @default(false)
  originalForecast  Decimal?         @db.Decimal(10, 2)
  reconciledAt      DateTime?
  isCOGS            Boolean          @default(false)
  quantity          Int?
  sku               String?
  strategyId        String?
  unitCost          Decimal?         @db.Decimal(10, 2)
  unitSalesId       String?
  weekEnding        DateTime?
  BudgetStrategy    BudgetStrategy?  @relation(fields: [strategyId], references: [id], onDelete: Cascade)
  UnitSales         UnitSales?       @relation(fields: [unitSalesId], references: [id])
  ExpenseGLEntry    ExpenseGLEntry[]

  @@unique([date, category, subcategory, vendor, strategyId])
  @@unique([weekStarting, category, unitSalesId, strategyId])
  @@index([bankTransactionId])
  @@index([category])
  @@index([date])
  @@index([isActual])
  @@index([isCOGS])
  @@index([sku])
  @@index([strategyId])
  @@index([type])
  @@index([unitSalesId])
  @@index([vendor])
  @@index([weekStarting])
}

model ExpenseGLEntry {
  id        String   @id @default(cuid())
  expenseId String
  glEntryId String
  createdAt DateTime @default(now())
  Expense   Expense  @relation(fields: [expenseId], references: [id], onDelete: Cascade)
  GLEntry   GLEntry  @relation(fields: [glEntryId], references: [id], onDelete: Cascade)

  @@unique([expenseId, glEntryId])
  @@index([expenseId])
  @@index([glEntryId])
}

model FinancialPeriod {
  id            String    @id @default(cuid())
  name          String
  type          String
  startDate     DateTime
  endDate       DateTime
  status        String    @default("open")
  totalRevenue  Decimal   @default(0) @db.Decimal(10, 2)
  totalExpenses Decimal   @default(0) @db.Decimal(10, 2)
  totalProfit   Decimal   @default(0) @db.Decimal(10, 2)
  closedAt      DateTime?
  closedBy      String?
  closingNotes  String?
  metadata      Json?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  GLEntry       GLEntry[]

  @@unique([type, startDate])
  @@index([startDate])
  @@index([status])
  @@index([type])
}

model GLEntry {
  id               String             @id @default(cuid())
  date             DateTime
  account          String
  accountCategory  String
  description      String
  debit            Decimal            @default(0) @db.Decimal(10, 2)
  credit           Decimal            @default(0) @db.Decimal(10, 2)
  reference        String?
  source           String             @default("manual")
  metadata         Json?
  createdAt        DateTime           @default(now())
  updatedAt        DateTime           @updatedAt
  periodId         String?
  strategyId       String?
  ExpenseGLEntry   ExpenseGLEntry[]
  FinancialPeriod  FinancialPeriod?   @relation(fields: [periodId], references: [id])
  BudgetStrategy   BudgetStrategy?    @relation(fields: [strategyId], references: [id], onDelete: Cascade)
  UnitSalesGLEntry UnitSalesGLEntry[]

  @@index([accountCategory])
  @@index([account])
  @@index([date])
  @@index([source])
  @@index([strategyId])
}

model OrderTimeline {
  id             String         @id @default(cuid())
  strategyId     String
  week           Int
  quarter        Int
  year           Int
  sku            String
  quantity       Int
  createdAt      DateTime       @default(now())
  updatedAt      DateTime       @updatedAt
  BudgetStrategy BudgetStrategy @relation(fields: [strategyId], references: [id], onDelete: Cascade)

  @@unique([strategyId, year, week, sku])
  @@index([sku])
  @@index([strategyId])
  @@index([year])
  @@index([quarter])
  @@index([week])
}

model Product {
  id                String          @id @default(cuid())
  sku               String
  name              String
  description       String?
  category          String
  status            String          @default("active")
  currentStock      Int             @default(0)
  reorderPoint      Int?
  reorderQuantity   Int?
  metadata          Json?
  createdAt         DateTime        @default(now())
  updatedAt         DateTime        @updatedAt
  awd               Decimal         @default(0) @db.Decimal(10, 2)
  cbm               Decimal?        @db.Decimal(10, 6)
  country           String?
  density           Decimal?        @db.Decimal(10, 2)
  destinationMarket String?
  freight           Decimal         @default(0) @db.Decimal(10, 2)
  fulfillmentFee    Decimal         @default(0) @db.Decimal(10, 2)
  height            Decimal?        @db.Decimal(10, 2)
  investedCost      Decimal         @default(0) @db.Decimal(10, 2)
  length            Decimal?        @db.Decimal(10, 2)
  manufacturing     Decimal         @default(0) @db.Decimal(10, 2)
  margin            Decimal         @default(0) @db.Decimal(10, 2)
  marginPercent     Decimal         @default(0) @db.Decimal(10, 2)
  micron            Int?
  packSize          Int?
  packageDimensions String?
  pricing           Decimal         @default(0) @db.Decimal(10, 2)
  productArea       Decimal?        @db.Decimal(10, 4)
  productLength     Decimal?        @db.Decimal(10, 2)
  productWidth      Decimal?        @db.Decimal(10, 2)
  referralFee       Decimal         @default(0) @db.Decimal(10, 2)
  refund            Decimal         @default(0) @db.Decimal(10, 2)
  refundRate        Decimal?        @default(0.01) @db.Decimal(5, 4)
  sizeTier          String?
  sourcingCountry   String?
  strategyId        String?
  tacos             Decimal?        @default(0.12) @db.Decimal(5, 4)
  tariff            Decimal         @default(0) @db.Decimal(10, 2)
  tariffRate        Decimal?        @default(0.35) @db.Decimal(5, 4)
  weightGrams       Decimal?        @db.Decimal(10, 2)
  weightLb          Decimal?        @db.Decimal(10, 2)
  weightOz          Decimal?        @db.Decimal(10, 2)
  width             Decimal?        @db.Decimal(10, 2)
  BudgetStrategy    BudgetStrategy? @relation(fields: [strategyId], references: [id], onDelete: Cascade)

  @@unique([sku, strategyId])
  @@index([category])
  @@index([status])
  @@index([strategyId])
}

model ReconciliationStatus {
  id                 String   @id @default(cuid())
  lastReconciledDate DateTime
  cutoffDate         DateTime
  isActive           Boolean  @default(false)
  bankName           String?
  fileName           String
  uploadedBy         String?
  transactionCount   Int
  totalAmount        Decimal  @db.Decimal(10, 2)
  createdAt          DateTime @default(now())
  updatedAt          DateTime @updatedAt

  @@index([isActive])
}

model UnitSales {
  id               String             @id @default(cuid())
  strategyId       String?
  week             Int
  quarter          Int
  year             Int
  sku              String
  units            Int
  revenue          Decimal            @db.Decimal(10, 2)
  metadata         Json?
  isActual         Boolean            @default(false)
  reconciledAt     DateTime?
  createdAt        DateTime           @default(now())
  updatedAt        DateTime           @updatedAt
  Expense          Expense[]
  BudgetStrategy   BudgetStrategy?    @relation(fields: [strategyId], references: [id], onDelete: Cascade)
  UnitSalesGLEntry UnitSalesGLEntry[]

  @@unique([year, week, sku, strategyId])
  @@index([isActual])
  @@index([sku])
  @@index([strategyId])
  @@index([year])
  @@index([quarter])
  @@index([week])
}

model UnitSalesGLEntry {
  id          String    @id @default(cuid())
  unitSalesId String
  glEntryId   String
  createdAt   DateTime  @default(now())
  GLEntry     GLEntry   @relation(fields: [glEntryId], references: [id], onDelete: Cascade)
  UnitSales   UnitSales @relation(fields: [unitSalesId], references: [id], onDelete: Cascade)

  @@unique([unitSalesId, glEntryId])
  @@index([glEntryId])
  @@index([unitSalesId])
}

model IncomeStatement {
  id                              String   @id @default(cuid())
  strategyId                      String
  period                          String
  periodType                      String   // 'monthly', 'quarterly', 'yearly'
  year                           Int
  quarter                        Int?
  month                          Int?
  
  // Revenue
  amazonSales                    Decimal  @default(0) @db.Decimal(12,2)
  amazonFbaInventoryReimbursement Decimal @default(0) @db.Decimal(12,2)
  cashbackRewards                Decimal  @default(0) @db.Decimal(12,2)
  totalRevenue                   Decimal  @default(0) @db.Decimal(12,2)
  
  // Cost of Goods Sold
  costOfGoodsSold                Decimal  @default(0) @db.Decimal(12,2)
  manufacturing                  Decimal  @default(0) @db.Decimal(12,2)
  freightCustomDuty              Decimal  @default(0) @db.Decimal(12,2)
  landFreight                    Decimal  @default(0) @db.Decimal(12,2)
  storage3pl                     Decimal  @default(0) @db.Decimal(12,2)
  vatTariffs                     Decimal  @default(0) @db.Decimal(12,2)
  totalCOGS                      Decimal  @default(0) @db.Decimal(12,2)
  grossProfit                    Decimal  @default(0) @db.Decimal(12,2)
  
  // Amazon/Marketplace Expenses
  amazonSellerFees               Decimal  @default(0) @db.Decimal(12,2)
  amazonFbaFees                  Decimal  @default(0) @db.Decimal(12,2)
  amazonStorageFees              Decimal  @default(0) @db.Decimal(12,2)
  inventoryAdjustments           Decimal  @default(0) @db.Decimal(12,2)
  refunds                        Decimal  @default(0) @db.Decimal(12,2)
  referralFees                   Decimal  @default(0) @db.Decimal(12,2)
  totalAmazonExpenses            Decimal  @default(0) @db.Decimal(12,2)
  
  // Operating Expenses
  payroll                        Decimal  @default(0) @db.Decimal(12,2)
  payrollTax                     Decimal  @default(0) @db.Decimal(12,2)
  contractSalaries               Decimal  @default(0) @db.Decimal(12,2)
  freelanceServices              Decimal  @default(0) @db.Decimal(12,2)
  membersRemuneration            Decimal  @default(0) @db.Decimal(12,2)
  rent                           Decimal  @default(0) @db.Decimal(12,2)
  utilities                      Decimal  @default(0) @db.Decimal(12,2)
  telephoneInternet              Decimal  @default(0) @db.Decimal(12,2)
  officeSupplies                 Decimal  @default(0) @db.Decimal(12,2)
  insurance                      Decimal  @default(0) @db.Decimal(12,2)
  advertising                    Decimal  @default(0) @db.Decimal(12,2)
  professionalFees               Decimal  @default(0) @db.Decimal(12,2)
  legalCompliance                Decimal  @default(0) @db.Decimal(12,2)
  accounting                     Decimal  @default(0) @db.Decimal(12,2)
  itSoftware                     Decimal  @default(0) @db.Decimal(12,2)
  researchDevelopment            Decimal  @default(0) @db.Decimal(12,2)
  bankFees                       Decimal  @default(0) @db.Decimal(12,2)
  interestPaid                   Decimal  @default(0) @db.Decimal(12,2)
  bankRevaluations               Decimal  @default(0) @db.Decimal(12,2)
  unrealisedCurrencyGains        Decimal  @default(0) @db.Decimal(12,2)
  realisedCurrencyGains          Decimal  @default(0) @db.Decimal(12,2)
  travel                         Decimal  @default(0) @db.Decimal(12,2)
  mealsEntertainment             Decimal  @default(0) @db.Decimal(12,2)
  depreciationExpense            Decimal  @default(0) @db.Decimal(12,2)
  generalOperatingExpenses       Decimal  @default(0) @db.Decimal(12,2)
  otherExpenses                  Decimal  @default(0) @db.Decimal(12,2)
  totalOperatingExpenses         Decimal  @default(0) @db.Decimal(12,2)
  
  // Totals
  totalExpenses                  Decimal  @default(0) @db.Decimal(12,2)
  netIncome                      Decimal  @default(0) @db.Decimal(12,2)
  
  createdAt                      DateTime @default(now())
  updatedAt                      DateTime @updatedAt

  @@unique([strategyId, period])
  @@index([strategyId])
  @@index([period])
}

model BalanceSheet {
  id                             String   @id @default(cuid())
  strategyId                     String
  period                         String
  periodType                     String
  year                          Int
  quarter                       Int?
  month                         Int?
  
  // Assets
  businessBankAccount           Decimal  @default(0) @db.Decimal(12,2)
  inventory                     Decimal  @default(0) @db.Decimal(12,2)
  prepayments                   Decimal  @default(0) @db.Decimal(12,2)
  amazonReceivable              Decimal  @default(0) @db.Decimal(12,2)
  amazonReservedBalances        Decimal  @default(0) @db.Decimal(12,2)
  amazonSplitMonthRollovers     Decimal  @default(0) @db.Decimal(12,2)
  otherDebtors                  Decimal  @default(0) @db.Decimal(12,2)
  officeEquipment               Decimal  @default(0) @db.Decimal(12,2)
  accumulatedDepreciation       Decimal  @default(0) @db.Decimal(12,2)
  totalAssets                   Decimal  @default(0) @db.Decimal(12,2)
  
  // Liabilities
  salesTaxPayable               Decimal  @default(0) @db.Decimal(12,2)
  payrollTaxPayable             Decimal  @default(0) @db.Decimal(12,2)
  membersLoanAccount            Decimal  @default(0) @db.Decimal(12,2)
  rounding                      Decimal  @default(0) @db.Decimal(12,2)
  totalLiabilities              Decimal  @default(0) @db.Decimal(12,2)
  
  // Equity
  memberInvestmentJarrar        Decimal  @default(0) @db.Decimal(12,2)
  memberInvestmentAbdul         Decimal  @default(0) @db.Decimal(12,2)
  memberInvestmentAmjad         Decimal  @default(0) @db.Decimal(12,2)
  capitalMemberUnits            Decimal  @default(0) @db.Decimal(12,2)
  retainedEarnings              Decimal  @default(0) @db.Decimal(12,2)
  memberDistributions           Decimal  @default(0) @db.Decimal(12,2)
  totalEquity                   Decimal  @default(0) @db.Decimal(12,2)
  
  totalLiabilitiesEquity        Decimal  @default(0) @db.Decimal(12,2)
  
  createdAt                     DateTime @default(now())
  updatedAt                     DateTime @updatedAt

  @@unique([strategyId, period])
  @@index([strategyId])
  @@index([period])
}

model CashFlowStatement {
  id                            String   @id @default(cuid())
  strategyId                    String
  period                        String
  periodType                    String
  year                         Int
  quarter                      Int?
  month                        Int?
  
  // Operating Activities
  netIncome                    Decimal  @default(0) @db.Decimal(12,2)
  depreciationAmortization     Decimal  @default(0) @db.Decimal(12,2)
  changeInInventory            Decimal  @default(0) @db.Decimal(12,2)
  changeInAmazonReceivable     Decimal  @default(0) @db.Decimal(12,2)
  changeInPrepayments          Decimal  @default(0) @db.Decimal(12,2)
  changeInOtherDebtors         Decimal  @default(0) @db.Decimal(12,2)
  changeInSalesTaxPayable      Decimal  @default(0) @db.Decimal(12,2)
  changeInPayrollTaxPayable    Decimal  @default(0) @db.Decimal(12,2)
  changeInMembersLoanAccount   Decimal  @default(0) @db.Decimal(12,2)
  netCashFromOperating         Decimal  @default(0) @db.Decimal(12,2)
  
  // Investing Activities
  purchaseOfficeEquipment      Decimal  @default(0) @db.Decimal(12,2)
  netCashFromInvesting         Decimal  @default(0) @db.Decimal(12,2)
  
  // Financing Activities
  memberInvestments            Decimal  @default(0) @db.Decimal(12,2)
  memberDistributions          Decimal  @default(0) @db.Decimal(12,2)
  netCashFromFinancing         Decimal  @default(0) @db.Decimal(12,2)
  
  // Cash Flow Summary
  netChangeInCash              Decimal  @default(0) @db.Decimal(12,2)
  beginningCashBalance         Decimal  @default(0) @db.Decimal(12,2)
  endingCashBalance            Decimal  @default(0) @db.Decimal(12,2)
  
  createdAt                    DateTime @default(now())
  updatedAt                    DateTime @updatedAt

  @@unique([strategyId, period])
  @@index([strategyId])
  @@index([period])
}
