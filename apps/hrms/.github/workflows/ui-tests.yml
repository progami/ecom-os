name: HRMS UI Tests

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]
  workflow_dispatch:

jobs:
  test:
    name: Run UI Tests
    runs-on: ubuntu-latest
    timeout-minutes: 30
    
    strategy:
      fail-fast: false
      matrix:
        browser: [chromium, firefox, webkit]
        test-suite:
          - name: "Employee Management"
            pattern: "Employees Page Tests"
          - name: "Employee Forms"
            pattern: "should test form buttons|should test back navigation"
          - name: "Freelancer Search"
            pattern: "Freelancers.*should test search functionality"
          - name: "Document Management"
            pattern: "Documents.*should test upload document button|should test document actions"
          - name: "Resources"
            pattern: "Resources Page Tests"
          - name: "Attendance"
            pattern: "Attendance.*should test attendance controls|should test edit attendance"
          - name: "Settings"
            pattern: "Settings.*should test company settings|should test department management|should test save changes"

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright browsers
        run: npx playwright install --with-deps ${{ matrix.browser }}

      - name: Start application
        run: |
          npm run dev &
          npx wait-on http://localhost:3006 -t 30000
        env:
          CI: true

      - name: Run ${{ matrix.test-suite.name }} tests
        run: |
          npx playwright test tests/e2e/exhaustive-ui-test.spec.ts \
            --grep "${{ matrix.test-suite.pattern }}" \
            --project=${{ matrix.browser }} \
            --reporter=html,github \
            --retries=2
        env:
          CI: true

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report-${{ matrix.browser }}-${{ matrix.test-suite.name }}
          path: playwright-report/
          retention-days: 7

      - name: Upload test videos
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: test-videos-${{ matrix.browser }}-${{ matrix.test-suite.name }}
          path: test-results/
          retention-days: 3

  test-summary:
    name: Test Summary
    needs: test
    runs-on: ubuntu-latest
    if: always()
    
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: all-reports/

      - name: Generate summary
        run: |
          echo "## Test Execution Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Test Matrix Results" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "| Browser | Test Suite | Status |" >> $GITHUB_STEP_SUMMARY
          echo "|---------|------------|--------|" >> $GITHUB_STEP_SUMMARY
          
          # Add test results summary here
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Coverage Areas" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ Employee Management (CRUD operations)" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ Form Navigation and Controls" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ Search Functionality" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ Document Management" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ Resource Management" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ Attendance Tracking" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ Settings Configuration" >> $GITHUB_STEP_SUMMARY