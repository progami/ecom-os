name: CI - WMS

on:
  push:
    branches: [main, develop]
    tags:
      - 'v*'
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]
  schedule:
    - cron: '0 2 * * *'  # Daily at 2 AM UTC
  workflow_dispatch:
    inputs:
      run-performance:
        description: 'Run performance tests'
        type: boolean
        default: false
      run-security:
        description: 'Run security scanning'
        type: boolean
        default: false

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  # PR validation
  pr-checks:
    if: github.event_name == 'pull_request'
    uses: orgname/shared-workflows/.github/workflows/pr-checks.yml@main
    with:
      check-pr-title: true
      add-size-labels: true
      comment-test-results: true
    secrets:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # Code quality and build
  ci-build:
    uses: orgname/shared-workflows/.github/workflows/ci-base.yml@main
    with:
      node-version: '20'
      node-matrix: true  # Test on both Node 18 and 20
      run-type-check: true
      run-security: ${{ github.event.inputs.run-security == 'true' || github.event_name == 'schedule' }}
      build-env: |
        {
          "DATABASE_URL": "postgresql://test:test@localhost:5432/test",
          "NEXTAUTH_URL": "http://localhost:3000",
          "NEXTAUTH_SECRET": "test-secret",
          "USE_TEST_AUTH": "true"
        }
      services: 'postgres,redis'
    secrets:
      DATABASE_URL: ${{ secrets.DATABASE_URL }}
      NEXTAUTH_SECRET: ${{ secrets.NEXTAUTH_SECRET }}

  # Test suites
  test-suite:
    needs: ci-build
    uses: orgname/shared-workflows/.github/workflows/test-suite.yml@main
    with:
      node-version: '20'
      run-unit: true
      run-integration: true
      run-e2e: ${{ github.event_name == 'pull_request' || github.ref == 'refs/heads/main' }}
      e2e-browsers: '["chromium"]'
      services-config: 'postgres,redis'
    secrets:
      DATABASE_URL: ${{ secrets.DATABASE_URL }}
      REDIS_URL: ${{ secrets.REDIS_URL }}
      NEXTAUTH_SECRET: ${{ secrets.NEXTAUTH_SECRET }}

  # Performance tests (conditional)
  performance-tests:
    if: |
      github.event_name == 'schedule' || 
      github.event.inputs.run-performance == 'true' || 
      (github.ref == 'refs/heads/main' && contains(github.event.head_commit.message, '[perf]'))
    needs: ci-build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      - run: npm ci
      - run: npm run test:performance
      - uses: actions/upload-artifact@v4
        with:
          name: performance-results
          path: tests/performance-report/
          retention-days: 30

  # Release job (tags only)
  release:
    if: startsWith(github.ref, 'refs/tags/v')
    needs: [ci-build, test-suite]
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Create Release
        uses: ncipollo/release-action@v1
        with:
          generateReleaseNotes: true

  # Final status check
  ci-status:
    if: always()
    needs: [ci-build, test-suite]
    runs-on: ubuntu-latest
    steps:
      - name: Check CI Status
        run: |
          if [ "${{ needs.ci-build.result }}" == "success" ] && [ "${{ needs.test-suite.result }}" == "success" ]; then
            echo "✅ All CI checks passed!"
          else
            echo "❌ CI checks failed"
            echo "Build: ${{ needs.ci-build.result }}"
            echo "Tests: ${{ needs.test-suite.result }}"
            exit 1
          fi