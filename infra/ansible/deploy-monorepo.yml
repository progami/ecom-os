---
- name: Deploy Ecom OS Monorepo (single EC2)
  hosts: mono
  become: yes
  vars:
    app_base: /opt/ecom-os
    node_version: "20"
    repo_url: "git@github.com:YOUR_ORG/YOUR_REPO.git"
    use_local_copy: true
    website_port: 3000
    wms_port: 3001
    fcc_port: 3003
    hrms_port: 3006
    central_db_port: 3004
    margin_master_port: 3007
    jason_port: 3008
  tasks:
    - name: Ensure system deps
      apt:
        update_cache: yes
        name: [curl, git, nginx, build-essential]
        state: present
    - name: Install Node.js
      shell: |
        curl -fsSL https://deb.nodesource.com/setup_{{ node_version }}.x | bash -
        apt-get install -y nodejs
      args: { creates: /usr/bin/node }
    - name: Install global tools
      npm:
        name: [pm2, pnpm]
        global: yes
        state: present
    - name: Create app dir
      file: { path: "{{ app_base }}", state: directory, owner: ubuntu, group: ubuntu, mode: '0755' }
    - name: Copy local repo (GitHub runner workspace)
      when: use_local_copy
      synchronize:
        src: "{{ lookup('env','GITHUB_WORKSPACE') | default('.') }}/"
        dest: "{{ app_base }}/repo/"
        delete: yes
        rsync_opts: ["--exclude=.git", "--exclude=node_modules", "--exclude=.turbo"]
    - name: Install dependencies (pnpm)
      command: pnpm install --frozen-lockfile
      args: { chdir: "{{ app_base }}/repo" }
    - name: Build apps
      command: pnpm build
      args: { chdir: "{{ app_base }}/repo" }
    - name: Write Nginx config
      template:
        src: nginx-monorepo.conf.j2
        dest: /etc/nginx/sites-available/ecom-os
      notify: restart nginx
    - name: Enable site
      file:
        src: /etc/nginx/sites-available/ecom-os
        dest: /etc/nginx/sites-enabled/ecom-os
        state: link
      notify: restart nginx
    - name: Disable default site
      file: { path: /etc/nginx/sites-enabled/default, state: absent }
      notify: restart nginx
    - name: Start apps with PM2
      shell: |
        cd {{ app_base }}/repo
        pm2 delete website || true
        pm2 delete wms || true
        pm2 delete fcc || true
        pm2 delete hrms || true
        pm2 delete central-db || true
        pm2 delete margin-master || true
        pm2 delete jason || true
        PORT={{ website_port }} pm2 start --name website -- pnpm --filter @ecom-os/website start
        PORT={{ wms_port }} pm2 start --name wms -- pnpm --filter @ecom-os/wms start
        PORT={{ fcc_port }} pm2 start --name fcc -- pnpm --filter @ecom-os/fcc start
        PORT={{ hrms_port }} pm2 start --name hrms -- pnpm --filter @ecom-os/hrms start
        PORT={{ central_db_port }} pm2 start --name central-db -- pnpm --filter @ecom-os/central-db start || true
        PORT={{ margin_master_port }} pm2 start --name margin-master -- pnpm --filter @ecom-os/margin-master start || true
        PORT={{ jason_port }} pm2 start --name jason -- pnpm --filter @ecom-os/jason start || true
        pm2 save
      args: { chdir: "{{ app_base }}/repo" }
  handlers:
    - name: restart nginx
      systemd: { name: nginx, state: restarted }

