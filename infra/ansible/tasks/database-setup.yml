---
# Database setup tasks - idempotent
- name: Ensure PostgreSQL is started and enabled
  systemd:
    name: postgresql
    state: started
    enabled: yes

- name: Configure PostgreSQL for production
  lineinfile:
    path: "/etc/postgresql/{{ postgres_version | default('16') }}/main/postgresql.conf"
    regexp: "^#?{{ item.key }} ="
    line: "{{ item.key }} = {{ item.value }}"
    state: present
  loop:
    - { key: 'shared_buffers', value: '256MB' }
    - { key: 'effective_cache_size', value: '1GB' }
    - { key: 'maintenance_work_mem', value: '64MB' }
    - { key: 'checkpoint_completion_target', value: '0.9' }
    - { key: 'wal_buffers', value: '16MB' }
    - { key: 'default_statistics_target', value: '100' }
    - { key: 'random_page_cost', value: '1.1' }
    - { key: 'effective_io_concurrency', value: '200' }
    - { key: 'work_mem', value: '4MB' }
    - { key: 'min_wal_size', value: '1GB' }
    - { key: 'max_wal_size', value: '2GB' }
  notify: restart postgresql

- name: Check if database user exists
  postgresql_query:
    db: postgres
    query: "SELECT 1 FROM pg_user WHERE usename = '{{ db_user }}'"
  become_user: postgres
  register: db_user_exists
  changed_when: false

- name: Create database user
  postgresql_user:
    name: "{{ db_user }}"
    password: "{{ db_password }}"
    role_attr_flags: CREATEDB,NOSUPERUSER
    state: present
  become_user: postgres
  when: db_user_exists.rowcount == 0

- name: Check if database exists
  postgresql_query:
    db: postgres
    query: "SELECT 1 FROM pg_database WHERE datname = '{{ db_name }}'"
  become_user: postgres
  register: db_exists
  changed_when: false

- name: Create application database
  postgresql_db:
    name: "{{ db_name }}"
    owner: "{{ db_user }}"
    encoding: UTF-8
    lc_collate: 'en_US.UTF-8'
    lc_ctype: 'en_US.UTF-8'
    template: template0
    state: present
  become_user: postgres
  when: db_exists.rowcount == 0

- name: Grant all privileges on database
  postgresql_privs:
    database: "{{ db_name }}"
    roles: "{{ db_user }}"
    type: database
    privs: ALL
    state: present
  become_user: postgres

- name: Configure PostgreSQL authentication
  lineinfile:
    path: "/etc/postgresql/{{ postgres_version | default('16') }}/main/pg_hba.conf"
    regexp: "^local\\s+all\\s+{{ db_user }}"
    line: "local   all             {{ db_user }}                                md5"
    insertafter: "^local   all             postgres"
    state: present
  notify: restart postgresql

- name: Create backup directory
  file:
    path: "{{ app_dir }}/backups"
    state: directory
    owner: "{{ app_user }}"
    group: "{{ app_user }}"
    mode: '0755'

- name: Setup database backup cron job
  cron:
    name: "Daily database backup"
    user: "{{ app_user }}"
    job: "pg_dump -h localhost -U {{ db_user }} {{ db_name }} | gzip > {{ app_dir }}/backups/wms_$(date +\\%Y\\%m\\%d_\\%H\\%M\\%S).sql.gz"
    minute: "0"
    hour: "2"
    state: present

- name: Setup backup cleanup cron job
  cron:
    name: "Cleanup old backups"
    user: "{{ app_user }}"
    job: "find {{ app_dir }}/backups -name '*.sql.gz' -mtime +7 -delete"
    minute: "0"
    hour: "3"
    state: present